<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
				
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
		
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="3"></property>
		<!--连接池中保留的最小连接数。Default: 3 -->
		<property name="minPoolSize" value="3"></property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="15"></property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3"></property>
		<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="8"></property>
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
		<property name="maxStatementsPerConnection" value="5"></property>
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800"></property>
	</bean>
	
	<!-- 配置LocalSessionFactoryBean，spring提供的用于整合hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入hibernate相关的属性配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
		<!-- 注入hibernate的映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:com/velvol/hr/domain/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.velvol.hr"/>

	<context:component-scan base-package="com.velvol.hr.wx.aspect" />

	<!--<context:component-scan base-package="com.velvol.hr.wx.quartz" />-->

	<!-- weixin.properties 配置文件 -->
	<bean id="weixinProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:weixin.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="weixinProperties" />
	</bean>
	<!-- 支持spring注解 -->
	<context:annotation-config/>
	<!-- 注解驱动 -->
	<tx:annotation-driven/>
	
	<!-- 配置shiro框架的过滤器工厂对象 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器对象 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 注入相关页面访问URL -->
		<property name="loginUrl" value="/login.jsp"/>
		<property name="successUrl" value="/index.jsp"/>
		<property name="unauthorizedUrl" value="/unauthorized.jsp"/>
		<!--注入URL拦截规则: 
		   authc：判断用户是否登录过
		   anon：不登录可以访问的资源
		-->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/data/** = anon
				/fonts/** = anon
				/plugins/** = anon
				/images/** = anon
				/jkzimage/** = anon
				/lzdimage/** = anon
				/Admin/** = anon
				/public/** = anon
				/layui/** = anon				
				/validatecode.jsp* = anon
				/login.jsp = anon
				/test.jsp = anon
				/register.jsp = anon
				/move_register.jsp= anon
				/registerok.jsp = anon
				/entry_course.jsp = anon

				/userAction_login.action = anon
				/userAction_loginUI.action = anon
				/preworkerAction_findRegionList.action = anon
				/preworkerAction_scanAdd.action = anon <!--预注册确认-->
				/preworkerAction_moveFindStations.action = anon
				/preworkerAction_isHasPhone.action = anon <!--校验手机号-->
				/preworkerAction_isHasCode.action = anon <!--校验验证码-->
				/preworkerAction_valideCode.action = anon  <!--短信获取验证码-->
				/preworkerAction_findByTelephone.action = anon <!--查询入职进程-->
				/weixinAction_execute.action = anon
				/weixinAction_createMenus.action = anon
				/weixinAction_weixinOAuth.action = anon


				/page_base_preworker.action = perms["yudengji"]
				/page_base_daibaodao.action = perms["daibaodao"]				
				/page_base_shiyongqi.action = perms["shiyongqi"]
				/page_leave_requery.action = perms["lizhishenqing"]
				/page_leave_zrequery.action = perms["daifalizhishenqing"]
				/page_leave_zshenpi.action = perms["zhanzhangshenpi"]
				/page_leave_rshenpi.action = perms["renshishenpi"]
				/page_leave_leavefinish.action = perms["wanchengliebiao"]
				/page_admin_userlist.action = perms["yonghuguanli"]

				/* = authc
			</value>
		</property>
	</bean>
	
	<!-- 注册安全管理器对象 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	 <property name="realm" ref="hrRealm"/>
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	
	<!-- 注册缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 注入ehcache的配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
	</bean>
	
		<!-- 注册realm -->
	<bean id="hrRealm" class="com.velvol.hr.realm.HRRealm"></bean>
	
	<!-- 开启shiro框架注解支持：注解方式权限控制 -->
	<bean id="defaultAdvisorAutoProxyCreator" 
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
			<!-- 必须使用cglib方式为Action对象创建代理对象 -->
		<property name="proxyTargetClass" value="true"/>
	</bean>
	
	<!-- 配置shiro框架提供的切面类，用于创建代理对象 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/>
</beans>
